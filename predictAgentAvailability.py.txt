#Â©Divynshu Dubey Python3
#Basicaly I have used first come first serve(FCFS) scheduling algorithms because
#any real life request is mostly serve on this basis.
#who has the smallest start time enters the ready queue first and
#completes it task according to burst time.
#I have listed the assignment time for next process in assignment Time column.  
def assignmentTime(processes, n, bt, st): 
	wt = [0] * n 
	tat = [0] * n
	service_time = [0] * n 
	service_time[0] = 0
	wt[0] = 0
	for i in range(1, n): 
		service_time[i] = (service_time[i - 1] +bt[i - 1]) 
		wt[i] = service_time[i] - st[i] 
		if (wt[i] < 0): 
			wt[i] = 0
	for i in range(n): 
		tat[i] = bt[i] + wt[i] 
	print("Users\t\tStart Time\tBurst Time\tAssignment Time \n") 
	total_wt = 0
	total_tat = 0
	for i in range(n): 
		total_tat = total_tat + tat[i] 
		if i==0:
		    compl_time = st[i] 
		else:
		    compl_time = tat[i-1] + st[i-1] 
		print(" ", i + 1, "\t\t", st[i], "\t\t", bt[i], "\t\t ", compl_time) 
 
processes = [1, 2, 3, 4] 
n = len(processes)
burst_time = [10, 8, 7, 5] 
start_time = [10, 4, 7, 5, 9] 
start_time,burst_time=zip(*sorted(zip(start_time,burst_time)))
assignmentTime(processes, n, burst_time,start_time) 
